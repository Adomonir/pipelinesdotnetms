# ASP.NET Core


# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  #vmImage: 'ubuntu-latest'
  name: 'SelfHostedPcAlberto'

variables:
  buildConfiguration: 'Release'
  imageName: 'acolom83/pipelines-dotnet-core-dockerhub'
  dockerHubCoonectionName: 'Acolom83_DokerHub_ServiceConnectionName'

#steps:
#- script: dotnet build --configuration $(buildConfiguration)
#  displayName: 'dotnet build $(buildConfiguration)'

#https://docs.microsoft.com/es-es/azure/devops/pipelines/tasks/build/docker?view=azure-devops
steps:
- task: Docker@2
  displayName: Login to Docker Hub
  inputs:
    command: login
    containerRegistry: $(dockerHubCoonectionName)
- task: Docker@2
  displayName: Build and push
  inputs:
    command: buildAndPush
    Dockerfile: Dockerfile
    tags: $(Build.BuildId)
    containerRegistry: |
      $(dockerHubCoonectionName)
    repository: $(imageName)
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: '**/docker-compose-azure.yml'
    TargetFolder: '- task: replacetokens@3

- task: replacetokens@3
  inputs:
    rootDirectory: '$(Build.ArtifactStagingDirectory)'
    targetFiles: '**/docker-compose-azure.yml'
    encoding: 'auto'
    writeBOM: true
    actionOnMissing: 'fail'
    keepToken: false
    tokenPrefix: '$('
    tokenSuffix: ')'
    useLegacyPattern: false
    enableTelemetry: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'docker-compose-azure.yml'
    publishLocation: 'Container'

